apiVersion: v1
kind: List
metadata:
  name: remoteresources3-controller-list
  annotations:
    version: "{{TRAVIS_COMMIT}}"
type: array
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: remoteresources3-controller
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
      labels:
        razee/watch-resource: "lite"
    spec:
      replicas: 1
      selector:
        matchLabels:
          app: remoteresources3-controller
      strategy:
        type: RollingUpdate
      template:
        metadata:
          labels:
            app: remoteresources3-controller
            razee/watch-resource: "lite"
          name: remoteresources3-controller
        spec:
          serviceAccountName: razeedeploy-sa
          containers:
          - image: "quay.io/razee/remoteresources3:{{TRAVIS_TAG}}"
            resources:
              limits:
                memory: 200Mi
                cpu: 100m
              requests:
                memory: 75Mi
                cpu: 40m
            env:
              - name: CRD_WATCH_TIMEOUT_SECONDS
                valueFrom:
                  configMapKeyRef:
                    name: razeedeploy-overrides
                    key: CRD_WATCH_TIMEOUT_SECONDS
                    optional: true
              - name: GROUP
                value: {{GROUP}}
              - name: VERSION
                value: {{VERSION}}
            imagePullPolicy: Always
            name: remoteresources3-controller
            livenessProbe:
              exec:
                command:
                - sh/liveness.sh
              initialDelaySeconds: 30
              periodSeconds: 150
              timeoutSeconds: 30
              failureThreshold: 1
            volumeMounts:
            - mountPath: /usr/src/app/download-cache
              name: cache-volume
            - mountPath: /usr/src/app/config
              name: razeedeploy-config
          volumes:
          - name: cache-volume
            emptyDir: {}
          - name: razeedeploy-config
            configMap:
              name: razeedeploy-config
              defaultMode: 420
              optional: true

  - apiVersion: apiextensions.k8s.io/v1beta1
    kind: CustomResourceDefinition
    metadata:
      # name must match the spec fields below, and be in the form: <plural>.<group>
      name: remoteresourcess3.{{GROUP}}
      annotations:
        razee.io/git-repo: "{{{GIT_REMOTE}}}"
        razee.io/commit-sha: "{{TRAVIS_COMMIT}}"
    spec:
      # group name to use for REST API: /apis/<group>/<version>
      group: {{GROUP}}
      # list of versions supported by this CustomResourceDefinition
      versions:
        - name: v1alpha1
          # Each version can be enabled/disabled by Served flag.
          served: true
          # One and only one version must be marked as the storage version.
          storage: false
          schema:
            # openAPIV3Schema is the schema for validating custom objects.
            openAPIV3Schema:
              type: object
              required: [spec]
              properties:
                spec:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                status:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
        - name: {{VERSION}}
          # Each version can be enabled/disabled by Served flag.
          served: true
          # One and only one version must be marked as the storage version.
          storage: true
          schema:
            # openAPIV3Schema is the schema for validating custom objects.
            openAPIV3Schema:
              type: object
              required: [spec]
              properties:
                spec:
                  type: object
                  required: [requests]
                  properties:
                    auth:
                      type: object
                      oneOf:
                        - required: [hmac]
                        - required: [iam]
                      properties:
                        hmac:
                          type: object
                          allOf:
                            - oneOf:
                                - required: [accessKeyId]
                                - required: [accessKeyIdRef]
                                - required: [access_key_id] # remove when v1alpha1 is depricated
                            - oneOf:
                                - required: [secretAccessKey]
                                - required: [secretAccessKeyRef]
                                - required: [secret_access_key] # remove when v1alpha1 is depricated
                          properties:
                            accessKeyId:
                              type: string
                            accessKeyIdRef:
                              type: object
                              required: [valueFrom]
                              properties:
                                valueFrom:
                                  type: object
                                  required: [secretKeyRef]
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      required: [name, key]
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        key:
                                          type: string
                            secretAccessKey:
                              type: string
                            secretAccessKeyRef:
                              type: object
                              required: [valueFrom]
                              properties:
                                valueFrom:
                                  type: object
                                  required: [secretKeyRef]
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      required: [name, key]
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        key:
                                          type: string
                        iam:
                          type: object
                          allOf:
                            - required: [url]
                            - oneOf:
                                - required: [responseType]
                                - required: [response_type] # remove when v1alpha1 is depricated
                            - oneOf:
                                - required: [grantType]
                                - required: [grant_type] # remove when v1alpha1 is depricated
                            - oneOf:
                                - required: [apiKey]
                                - required: [apiKeyRef]
                                - required: [api_key] # remove when v1alpha1 is depricated
                          properties:
                            responseType:
                              type: string
                            grantType:
                              type: string
                            url:
                              type: string
                              format: uri
                            apiKey:
                              type: string
                            apiKeyRef:
                              type: object
                              required: [valueFrom]
                              properties:
                                valueFrom:
                                  type: object
                                  required: [secretKeyRef]
                                  properties:
                                    secretKeyRef:
                                      type: object
                                      required: [name, key]
                                      properties:
                                        name:
                                          type: string
                                        namespace:
                                          type: string
                                        key:
                                          type: string
                    requests:
                      type: array
                      items:
                        type: object
                        required: [options]
                        properties:
                          optional:
                            type: boolean
                          options:
                            type: object
                            oneOf:
                              - required: [url]
                              - required: [uri]
                            properties:
                              url:
                                type: string
                                format: uri
                              uri:
                                type: string
                                format: uri
                              headers:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                status:
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
      # either Namespaced or Cluster
      scope: Namespaced
      names:
        # plural name to be used in the URL: /apis/<group>/<version>/<plural>
        plural: remoteresourcess3
        # singular name to be used as an alias on the CLI and for display
        singular: remoteresources3
        # kind is normally the CamelCased singular type. Your resource manifests use this.
        kind: RemoteResourceS3
        # shortNames allow shorter string to match your resource on the CLI
        shortNames:
        - rrs3
      subresources:
        # status enables the status subresource.
        status: {}
